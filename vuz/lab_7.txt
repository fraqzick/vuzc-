
using static System.Console;

namespace Lab_7
{
    class Ship
    {
        //Создаём поля класса
        private string name;
        private int displacement;
        private string type;


        //Создаём свойства полей
        public string Name
        {
            get{return name;} 
            set{if (value != "") name = value;}
        }
        public int Displacement
        {
            get{return displacement;} 
            set{if (value > 0) displacement = value;}
        }
        public string Type
        {
            get{return type;} 
            set{if (value != "") type = value;}
        }


        //Создаём конструкторы
        public Ship()
        {
            Name = "Pobeda";
            Displacement = 1500;
            Type = "Yacht";
        }
        public Ship(string name, int displasement, string type)
        {
            Name = name;
            Displacement = displasement;
            Type = type;
        }


        //Создаём методы класса
        public void WhatchData()
        {
            WriteLine($"Наименование - {Name}\nВодоизмещение - {Displacement}\nТип - {Type}");
        }
        public void ChangeData(string name, int displasement, string type)
        {
            Name = name;
            Displacement = displasement;
            Type = type;
        }
        public void SaveData()
        {
            FileInfo f = new(@"C:\Users\User\Desktop\vuzc-\vuz\for_save_data_lab_7.txt");
            StreamWriter writer = f.AppendText();
            writer.WriteLine($"Наименование - {Name}\nВодоизмещение - {Displacement}\nТип - {Type}");
            writer.Close();
        }


        //Перегуржаем логические операции
        public static Ship operator +(Ship obj1, Ship obj2)
        {
            Ship ship = new(obj1.Name, obj1.Displacement + obj2.Displacement, obj1.Type);
            return ship;
        }
        public static Ship operator <(Ship obj1, Ship obj2)
        {
            if (obj1.Displacement < obj2.Displacement) return obj1;
            else return obj2;
        }
        public static Ship operator >(Ship obj1, Ship obj2)
        {
            if (obj1.Displacement > obj2.Displacement) return obj1;
            else return obj2;
        }
    }
    class Program
    {
        static void Main()
        {
            //Создём экземпляры класса
            Ship ship1 = new();
            WriteLine("Был создан корабль с такими данными: ");
            ship1.WhatchData();

            WriteLine("Введите имя вашего корабля:");
            string n = ReadLine();
            WriteLine("Введите водоизмещение вашего корабля:");
            int d = Convert.ToInt32(ReadLine());
            WriteLine("Введите тип вашего корабля:");
            string t = ReadLine();
            Ship ship2 = new(n, d, t);
            //Тестим методы класса
            ship1.WhatchData();
            ship2.WhatchData();
            ship1.ChangeData("beda", 1500, "Yacht");
            ship1.SaveData();
            //Тестим перегрузку операции сложения
            Ship ship3 = ship1 + ship2;
            ship3.WhatchData();
            //Тестим перегрузку операции меньше
            Ship ship4 = ship1 < ship2;
            ship4.WhatchData();
        }
    }
}
